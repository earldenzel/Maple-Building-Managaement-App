@model Maple_Building_Management_App.Models.ComplaintModel

@{
    ViewBag.Title = "Edit Complaint";
}

@using Maple_Building_Management_App.Models;

<h2>Edit Complaint</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4></h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.ComplaintStatus, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.ComplaintStatus,
                new SelectList(Enum.GetValues(typeof(ComplaintStatus))),
                "",
                htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ComplaintStatus, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ComplaintType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.ComplaintType,
                new SelectList(Enum.GetValues(typeof(ComplaintType))),
                "",
                htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ComplaintType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IncidentDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.IncidentDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.IncidentDate, "", new { @class = "text-danger" })
        </div>
    </div>

    @{
        if (Model.ComplaintStatus == "Resolved")
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Feedback, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Feedback, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Feedback, "", new { @class = "text-danger" })
                </div>
            </div>
        }
    }

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Edit" class="btn btn-default" />
            @*<span class="text-danger">
                    @ViewBag.ErrorMessage
                </span>*@
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "ViewComplaints")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
